name: API Handler

on:
  repository_dispatch:
    types: [api_request]
  workflow_dispatch:
    inputs:
      text:
        description: 'Text to rewrite'
        required: true
        type: string

jobs:
  process-api-request:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Process API Request
      id: process
      run: |
        cd backend
        
        # 获取输入文本
        TEXT="${{ github.event.inputs.text || github.event.client_payload.text }}"
        
        if [ -z "$TEXT" ]; then
          echo "result=Error: No text provided" >> $GITHUB_OUTPUT
          exit 1
        fi
        
        # 调用 Gemini API
        RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d "{
            \"contents\": [{
              \"parts\": [{
                \"text\": \"请改写以下文本，保持原意但使用不同的表达方式：$TEXT\"
              }]
            }]
          }")
        
        # 提取结果
        REWRITTEN=$(echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text // "Error: Failed to process text"')
        
        echo "result=$REWRITTEN" >> $GITHUB_OUTPUT
        echo "original=$TEXT" >> $GITHUB_OUTPUT
    
    - name: Create Issue with Result
      uses: actions/github-script@v7
      with:
        script: |
          const result = '${{ steps.process.outputs.result }}';
          const original = '${{ steps.process.outputs.original }}';
          
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `API Response: ${original.substring(0, 50)}...`,
            body: `## API Response\n\n**Original Text:**\n${original}\n\n**Rewritten Text:**\n${result}\n\n---\n*Generated by GitHub Actions API Handler*`,
            labels: ['api-response']
          });
          
          console.log(`Created issue: ${issue.data.html_url}`);
          
          // 返回结果给调用者
          core.setOutput('result', result);
          core.setOutput('issue_url', issue.data.html_url); 